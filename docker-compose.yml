version: '3.5'
services:
  postgres:
    image: postgres
    environment:
      POSTGRES_DB: keycloak
      POSTGRES_USER: keycloak
      POSTGRES_PASSWORD: keycloak
    volumes:
      - type: volume
        source: postgres-volume
        target: /var/lib/postgresql/data
  keycloak:
    depends_on:
      - postgres
    image: jboss/keycloak:11.0.3
    command: [ "-Dkeycloak.migration.strategy=IGNORE_EXISTING" ]
    ports:
      - 8080:8080
    environment:
      KEYCLOAK_USER: admin
      KEYCLOAK_PASSWORD: admin
      KEYCLOAK_IMPORT: /tmp/my-realm.json
      # KEYCLOAK_LOGLEVEL: DEBUG
      PROXY_ADDRESS_FORWARDING: 'true'
      DB_USER: keycloak
      DB_PASSWORD: keycloak
      DB_ADDR: postgres
    volumes:
      - type: volume
        source: keycloak-volume
        target: /opt/jboss/keycloak/standalone/data
      - type: bind
        source: ./keycloak/my-realm.json
        target: /tmp/my-realm.json
  fastapi:
    image: test/fastapi-app:dev
    build:
      dockerfile: docker/Dockerfile.fastapi
      context: .
    environment:
      PORT: 8080
    ports:
      - 8081:8080
  angular:
    image: test/angular-app:dev
    build:
      dockerfile: docker/Dockerfile.angular
      context: .
  proxy:
    image: nginx:alpine
    depends_on:
      - keycloak
      - fastapi
      - angular
    ports:
      - 443:443
    volumes:
      - type: bind
        source: ./proxy/nginx-proxy.conf
        target: /etc/nginx/conf.d/proxy.conf
      - type: bind
        source: ./proxy/app.crt
        target: /etc/ssl/certs/app.crt
      - type: bind
        source: ./proxy/app.key
        target: /etc/ssl/private/app.key
volumes:
  keycloak-volume:
  postgres-volume:
